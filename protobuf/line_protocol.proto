syntax = "proto3";

/*========================================================================*/
/*                          ENUM DEFINTIONS                               */
/*========================================================================*/

// Definition of feedback response codes
enum ResponseCode {
  DEBUG = 0; // (default)
  ERROR = 1;
  ACK = 2;  // used to acknowledge action (for non-blocking events)
  DONE = 3; // used to give feedback without data
  DATA = 4; // used for response messages with data
}

// Definition of digital pin modes
enum DigitalMode {
  INPUT = 0; // (default)
  OUTPUT = 1;
  INPUT_PULLUP = 2;
}

// Definition of digital pin output
enum DigitalOutput {
  LOW = 0; // (default)
  HIGH = 1;
}

// Definition of possible UART-TTL ports
enum UartPort {
  UART2 = 0; // (default)
  UART3 = 1;
}

/*========================================================================*/
/*                  MAIN MESSAGES: REQUEST + FEEDBACK                     */
/*========================================================================*/

// message sent from controller to gateway
message Feedback {
  ResponseCode code = 1; // used for feedback message handling
  uint32 profile_id = 2; // used to identify profile
  string message = 3;    // used for debugging messages
  bytes data = 4;        // holds all response data
}

// message sent from gateway to controller
message Request {
  // action or registration
  oneof request_type {
    Action action = 1;
    Registration registration = 2;
    // IDEA: used to delete profile in registered profiles
    // => problem: if profile gets deleted befor response of e.g. uArm arrives
    // Deletion deletion = 3;
  }
}

/*========================================================================*/
/*                  SUB MESSAGES: ACTION + REGISTRATION                   */
/*========================================================================*/

// Actions: request on existing/registered field devices
message Action {
  uint32 profile_id = 1; // unique identification of profile
  // Driver: which driver is used for the profile registration (R_ for
  // Registration msg)
  oneof driver {
    A_Digital_Generic a_digital_generic = 2;
    A_UART_TTL_Generic a_uart_ttl_generic = 3;
    // A_IIC_Generic a_iic_generic = 4;
    // A_Digital_Ultrasonic a_digital_ultrasonic = 5;
    // ...
  }
}

// Registration: request to register/initialize new field devices/ profiles
message Registration {
  uint32 profile_id = 1; // unique identification of profile
  // Driver: which driver is used for the profile registration (R_ for
  // Registration msg)
  oneof driver {
    R_Digital_Generic r_digital_generic = 2;
    R_UART_TTL_Generic r_uart_ttl_generic = 3;
    // R_IIC_Generic r_iic_generic = 4;
    // R_Digital_Ultrasonic r_digital_ultrasonic = 5;
    // ...
  }
}

/*========================================================================*/
/*                  ACTION DRIVER MESSAGES                                */
/*========================================================================*/

// Action message for Digital generic driver
// TODO: how to implement inputmode?
message A_Digital_Generic { DigitalOutput output = 1; }

// Action message for UART-ttl generic driver
message A_UART_TTL_Generic { string command = 1; }

/*========================================================================*/
/*                  REGISTRATION DRIVER MESSAGES                          */
/*========================================================================*/

// Registration message for digital generic driver
message R_Digital_Generic {
  uint32 pin = 1;
  DigitalMode mode = 2;
}

// Registration message for UART-TTL generic driver
message R_UART_TTL_Generic {
  UartPort port = 1;
  uint32 baudrate = 2;
}
